spring:
  application:
    name: GnuGongji
  jackson:
    time-zone: Asia/Seoul
  task:
    scheduling:
      cron: ${CRON_EXPRESSION}
  # DATASOURCE SETTING
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: false # SQL 쿼리 출력 비활성화
    properties:
      hibernate:
        format_sql: false # 포맷된 SQL 출력 비활성화
  # SECURITY SETTING
  security:
    oauth2:
      client:
        # OAUTH2 PROVIDER
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정
        # OAUTH2 REGISTRATION
        registration:
          kakao:
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - account_email
          naver:
            client-id: ${OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${OAUTH2_NAVER_CLIENT_SECERT}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - email
            client-name: Naver
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
# WHITE ERROR PAGE
server:
  error:
    whitelabel:
      enabled: false

# SECURITY CUSTOM ENV
mycustom:
  jwt:
    secret: ${JWT_SECRET}
  cors:
    dev-url: ${DEV_URL}
    prod-url: ${PROD_URL}
  sub-limit: ${SUB_LIMIT}
  admin-password: ${ADMIN_PASSWORD}
  collection-date-range: ${COLLECTION_DATE_RANGE}
aes:
  aes-key: ${AES_KEY}

# LOGGING LEVEL
logging:
  level:
    site: info

firebase:
  api-url: ${FIREBASE_API_URL}
  json-directory: ${FIREBASE_JSON_DIRECTORY}

management:
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: env, beans